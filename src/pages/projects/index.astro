---
// Importing necessary components
import MainLayout from "@/layouts/MainLayout.astro";
import CardProjectSmall from "@components/ui/cards/CardProjectSmall.astro";
import CardProjectWide from "@components/ui/cards/CardProjectWide.astro";
import FeaturesProjectSummary from "@components/sections/features/FeaturesProjectSummary.astro";

// Importing necessary functions from Astro
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@data/constants";

// Fetching all the product related content and sorting it by main.id
const projects: CollectionEntry<"projects">[] = (
  await getCollection("projects", ({ id }) => {
    return id.startsWith("en/");
  })
).sort(
  (a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) =>
    a.data.main.id - b.data.main.id,
);

// Define variables for page content
const title: string = "Projects";
const subTitle: string = "Over the years I've amassed a collection of code projects, tools, and equipment. Here are some of the more interesting ones.";

const pageTitle: string = `Projects | ${SITE.title}`;
---

<MainLayout
  title={pageTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "WebPage",
    "@id": "https://jugr0jones.github.io/projects",
    "url": "https://jugr0jones.github.io/projects",
    "name": "Projects | Jones",
    "description": "The various bits and bobs I've worked on over the years.",
    "isPartOf": {
      "@type": "WebSite",
      "url": "https://jugr0jones.github.io",
      "name": "Jones",
      "description": "What I do. How I do it. Why I do it."
    },
    "inLanguage": "en-US"
  }}
>

  <div class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full">
      <h1 class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight block gap-8 sm:mb-8">
        {title}
      </h1>
      <p class="text-pretty text-neutral-600 dark:text-neutral-400 block">
        {subTitle}
      </p>
  </div>

  <div class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full">
    <!--Displaying products in alternating styles. Alternative product gets different card styling.-->
    <!--Maps through all product entries and displays them with either CardSmall or CardWide based on their position.-->
    <section class="grid grid-cols-1 gap-4 sm:grid-cols-3 md:gap-6 xl:gap-8">
      {
        projects.map((project, index) => {
          const position = index % 4;
          if (position === 0 || position === 3) {
            return <CardProjectSmall project={project} />;
          } else {
            return <CardProjectWide project={project} />;
          }
        })
      }
    </section>
  </div>
  <!--Features statistics section-->
  <FeaturesProjectSummary
    title="Personal Site"
    benefits={[
      "A static site generated with Astro.",
      "Uses GitHub Actions to deploy to GitHub Pages.",
      "Made with Tailwind CSS and Tailwind UI."
    ]}
    link="https://github.com/jugR0jones/jugR0jones.github.io"
  />
</MainLayout>